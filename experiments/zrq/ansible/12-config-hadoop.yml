#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

#
# What is not clear at the moment is how much of this config is needed on the masters and how much on the workers.
#


---
- name: "Configure Hadoop"
  hosts: masters:workers
  gather_facts: false
  vars:
    hdname: "hadoop-3.2.1"
    hdbase: "/opt"
    hdhome: "/opt/hadoop"
    hddata: "/var/local/hadoop"
    hdhost: "{{groups['masters'][0]}}"
    hduser: "{{hostvars[inventory_hostname].login}}"

  tasks:

    - name: "Create '{{hddata}}/namenode/names'"
      become: true
      file:
        path: "{{hddata}}/namenode/names"
        mode: 'u=rwx,g=rwxs,o=rx'
        state: directory
        recurse: yes
        owner: "{{hduser}}"
        group: "{{hduser}}"

    - name: "Create '{{hddata}}/namenode/data'"
      become: true
      file:
        path: "{{hddata}}/namenode/data"
        mode: 'u=rwx,g=rwxs,o=rx'
        state: directory
        owner: "{{hduser}}"
        group: "{{hduser}}"

    - name: "Configure 'core-site.xml'"
      become: true
      blockinfile:
        path:   "{{hdhome}}/etc/hadoop/core-site.xml"
        marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
        insertbefore: "</configuration>"
        block: |
          <property>
            <name>fs.default.name</name>
            <value>hdfs://{{hdhost}}:9000</value>
          </property>

    - name: "Configure 'hdfs-site.xml'"
      become: true
      blockinfile:
        path:   "{{hdhome}}/etc/hadoop/hdfs-site.xml"
        marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
        insertbefore: "</configuration>"
        block: |
          <property>
            <name>dfs.namenode.name.dir</name>
            <value>{{hddata}}/namenode/names</value>
          </property>
          <property>
            <name>dfs.namenode.data.dir</name>
            <value>{{hddata}}/namenode/data</value>
          </property>
          <property>
            <name>dfs.replication</name>
            <value>2</value>
          </property>
          <!--property>
            <name>dfs.datanode.du.reserved</name>
            <value>0</value>
          </property-->
          <property>
            <name>dfs.datanode.du.reserved.pct</name>
            <value>10</value>
          </property>

    - name: "Configure 'mapred-site.xml'"
      become: true
      blockinfile:
        path:   "{{hdhome}}/etc/hadoop/mapred-site.xml"
        marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
        insertbefore: "</configuration>"
        block: |
          </property>
          <property>
            <name>mapreduce.framework.name</name>
            <value>yarn</value>
          </property>
          <property>
            <name>yarn.app.mapreduce.am.env</name>
            <value>HADOOP_MAPRED_HOME={{hdhome}}</value>
          </property>
          <property>
            <name>mapreduce.map.env</name>
            <value>HADOOP_MAPRED_HOME={{hdhome}}</value>
          </property>
          <property>
            <name>mapreduce.reduce.env</name>
            <value>HADOOP_MAPRED_HOME={{hdhome}}</value>
          </property>
          <property>
            <name>yarn.app.mapreduce.am.resource.mb</name>
            <value>15000</value>
          </property>
          <property>
            <name>mapreduce.map.memory.mb</name>
            <value>7000</value>
          </property>
          <property>
            <name>mapreduce.reduce.memory.mb</name>
            <value>7000</value>
          </property>

    - name: "Configure 'yarn-site.xml'"
      become: true
      blockinfile:
        path:   "{{hdhome}}/etc/hadoop/yarn-site.xml"
        marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
        insertbefore: "</configuration>"
        block: |
          <property>
            <name>yarn.acl.enable</name>
            <value>0</value>
          </property>
          <property>
            <name>yarn.resourcemanager.hostname</name>
            <value>{{hdhost}}</value>
          </property>
          <property>
            <name>yarn.nodemanager.aux-services</name>
            <value>mapreduce_shuffle</value>
          </property>
          <property>
            <name>yarn.nodemanager.resource.memory-mb</name>
            <value>15000</value>
          </property>
          <property>
            <name>yarn.scheduler.maximum-allocation-mb</name>
            <value>15000</value>
          </property>
          <property>
            <name>yarn.scheduler.minimum-allocation-mb</name>
            <value>2000</value>
          </property>
          <property>
            <name>yarn.nodemanager.vmem-check-enabled</name>
            <value>false</value>
          </property>
          <property>
            <name>yarn.scheduler.capacity.root.support.user-limit-factor</name>
            <value>2</value>
          </property>
          <property>
            <name>yarn.nodemanager.disk-health-checker.min-healthy-disks</name>
            <value>0.0</value>
          </property>
          <property>
            <name>yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage</name>
            <value>80.0</value>
          </property>
          <property>
            <name>yarn.resourcemanager.scheduler.address</name>
            <value>{{hdhost}}:8030</value>
          </property>
          <property>
            <name>yarn.resourcemanager.address</name>
            <value>{{hdhost}}:8032</value>
          </property>
          <property>
            <name>yarn.resourcemanager.webapp.address</name>
            <value>{{hdhost}}:8088</value>
          </property>
          <property>
            <name>yarn.resourcemanager.resource-tracker.address</name>
            <value>{{hdhost}}:8031</value>
          </property>
          <property>
            <name>yarn.resourcemanager.admin.address</name>
            <value>{{hdhost}}:8033</value>
          </property>

    - name: "Configure 'workers'"
      become: true
      template:
        src:  "templates/hadoop-workers.j2"
        dest: "{{hdhome}}/etc/hadoop/workers"


