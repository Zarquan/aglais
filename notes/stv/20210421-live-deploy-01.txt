
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2021, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#


    Target:

        Create a new live deploy

    Result:

        Ongoing..



# -------------------------------------------------
# Checkout our branch on stvoutsin/aglais
#[user@desktop]

git checkout https://github.com/wfau/aglais/ aglais


# ---------------------------------
# Update the Openstack cloud name.
#[user@desktop]

    cloudname=gaia-prod

    sed -i '
        s/^\(AGLAIS_CLOUD\)=.*$/\1='${cloudname:?}'/
        ' "${HOME}/aglais.env"


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    source "${HOME:?}/aglais.env"

    docker run \
        --rm \
        --tty \
        --interactive \
        --name ansibler \
        --hostname ansibler \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK}:/mnt/ssh_auth_sock:rw,z" \
        --env "cloudname=${AGLAIS_CLOUD:?}" \
        --volume "${HOME:?}/clouds-dev.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/deployments:/deployments:ro,z" \
        atolmis/ansible-client:2020.12.02 \
        bash




# -----------------------------------------------------
# Delete everything ....
#[root@ansibler]

    time \
        /deployments/openstack/bin/delete-all.sh \
            "${cloudname:?}"


      > ---- ----
	Done

	real	5m8.439s
	user	0m47.035s
	sys	0m4.399s




# -----------------------------------------------------
# Create evertything ....
#[root@ansibler]

    time \
        /deployments/hadoop-yarn/bin/create-all.sh \
            "${cloudname:?}"



      > real	59m44.912s
	user	13m22.288s
	sys	2m44.906s




# -----------------------------------------------------
# Create gaiauser
#[fedora@zeppelin]

    sudo yum install nano
    nano /home/fedora/zeppelin-0.8.2-bin-all/conf/shiro.ini

    # Create user accounts

        [users]

	dcr = ####, role1
	nch = ####, role1
	zrq = ####, role1
	stv = ####, role1





# -----------------------------------------------------
# Setup integration with github
#[root@ansibler]

# Manual Step Warning! We need to setup github user & pass for commiting changes to our notebooks
# TODO: automate this


  ssh zeppelin \
        '
        export githubuser=svoutsinas
        export githubpass=Testpass123$

        rm -rf /home/fedora/zeppelin-0.8.2-bin-all/notebook
	git clone https://${githubuser:?}:${githubpass:?}@github.com/wfau/aglais-notebooks.git /home/fedora/zeppelin-0.8.2-bin-all/notebook

	cat > "${HOME}/zeppelin-0.8.2-bin-all/notebook/.git/hooks/post-commit" << EOF
	#!/bin/sh
	git push 

	EOF

	chmod +x ${HOME}/zeppelin-0.8.2-bin-all/notebook/.git/hooks/post-commit
	/home/fedora/zeppelin-0.8.2-bin-all/bin/zeppelin-daemon.sh restart
	'

	> Cloning into '/home/fedora/zeppelin-0.8.2-bin-all/notebook'...
	  Zeppelin stop                                              [  OK  ]
	  Zeppelin start                                             [  OK  ]

	# Success




# -----------------------------------------------------
# Run a test notebook ..
#[user@zeppelin]

    # Import from URL
    # Good astrometric solutions via ML Random Forrest classifier
    https://raw.githubusercontent.com/wfau/aglais-notebooks/main/2FRPC4BFS/note.json

        Works

        Initial select
	Took 12 min 31 sec. Last updated by gaiauser at March 24 2021, 7:50:13 PM.


        Forrest Classifier
	rf = RandomForestClassifier(featureSubsetStrategy = 'sqrt', featuresCol = 'features', labelCol = 'label', numTrees = 500, impurity = 'gini', seed=42)
	Took 12 min 21 sec. Last updated by stv at April 21 2021, 9:05:30 PM.



        # Rest of Notebook runs Successfully
