#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2021, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#



    Target:

        Create a new live deploy that uses Aglais Cluster that uses Cinder for tmp storage

    Result:

        Ongoing..



# -------------------------------------------------
# Checkout our branch on stvoutsin/aglais
#[user@desktop]

git checkout https://github.com/wfau/aglais/


# ---------------------------------
# Update the Openstack cloud name.
#[user@desktop]

    cloudname=gaia-prod

    sed -i '
        s/^\(AGLAIS_CLOUD\)=.*$/\1='${cloudname:?}'/
        ' "${HOME}/aglais.env"


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    source "${HOME:?}/aglais.env"

    docker run \
        --rm \
        --tty \
        --interactive \
        --name ansibler \
        --hostname ansibler \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK}:/mnt/ssh_auth_sock:rw,z" \
        --env "cloudname=${AGLAIS_CLOUD:?}" \
        --volume "${HOME:?}/clouds-dev.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/deployments:/deployments:ro,z" \
        atolmis/ansible-client:2020.12.02 \
        bash




# -----------------------------------------------------
# Delete everything ....
#[root@ansibler]

    time \
        /deployments/openstack/bin/delete-all.sh \
            "${cloudname:?}"
		

	> ---- ----
	> Done

	> real	3m1.827s
	> user	0m46.613s
	> sys	0m4.293s



# -----------------------------------------------------
# Create evertything ....
#[root@ansibler]

    time \
        /deployments/hadoop-yarn/bin/create-all.sh \
            "${cloudname:?}"


   > 

# 3 worker nodes failed with errors
         ..
   
TASK [Update the DNF cache] *********************************************************************************************************************************************************************************
fatal: [worker04]: FAILED! => {"changed": false, "msg": "Failed to synchronize cache for repo 'updates-modular'", "rc": 1, "results": []}
...ignoring
fatal: [worker01]: FAILED! => {"changed": false, "msg": "Failed to synchronize cache for repo 'updates-modular'", "rc": 1, "results": []}
...ignoring
fatal: [worker02]: FAILED! => {"changed": false, "msg": "Failed to synchronize cache for repo 'fedora'", "rc": 1, "results": []}
...ignoring
changed: [worker03]
changed: [master01]
changed: [zeppelin]

TASK [Install monitoring tools] *****************************************************************************************************************************************************************************
changed: [worker03]
changed: [master01]
fatal: [worker04]: FAILED! => {"changed": false, "msg": "Failed to synchronize cache for repo 'updates'", "rc": 1, "results": []}
changed: [zeppelin]
fatal: [worker01]: FAILED! => {"changed": false, "msg": "Failed to synchronize cache for repo 'fedora'", "rc": 1, "results": []}
changed: [worker02]


PLAY RECAP **************************************************************************************************************************************************************************************************
localhost                  : ok=71   changed=56   unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
master01                   : ok=69   changed=51   unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
worker01                   : ok=5    changed=2    unreachable=0    failed=1    skipped=0    rescued=0    ignored=1   
worker02                   : ok=64   changed=45   unreachable=0    failed=0    skipped=1    rescued=0    ignored=1   
worker03                   : ok=64   changed=46   unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
worker04                   : ok=5    changed=2    unreachable=0    failed=1    skipped=0    rescued=0    ignored=1   
zeppelin                   : ok=75   changed=61   unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   




# -----------------------------------------------------
# Delete everything again....
#[root@ansibler]

    time \
        /deployments/openstack/bin/delete-all.sh \
            "${cloudname:?}"

        > real	2m25.874s
        > user	0m36.783s
        > sys	0m3.076s


# -----------------------------------------------------
# Create evertything ....
#[root@ansibler]

    time \
        /deployments/hadoop-yarn/bin/create-all.sh \
            "${cloudname:?}"


	> real	43m6.910s
	> user	10m13.128s
	> sys	2m18.880s


# -----------------------------------------------------
# Create gaiauser
#[fedora@zeppelin]

    sudo yum install nano
    nano /home/fedora/zeppelin-0.8.2-bin-all/conf/shiro.ini

    # Create user accounts




# -----------------------------------------------------
# Setup integration with github
#[root@ansibler]

# Manual Step Warning! We need to setup github user & pass for commiting changes to our notebooks
# TODO: automate this


  ssh zeppelin \
        '
        export githubuser=username_encodede
        export githubpass=pass_encoded

        rm -rf /home/fedora/zeppelin-0.8.2-bin-all/notebook
	git clone https://${githubuser:?}:${githubpass:?}@github.com/wfau/aglais-notebooks.git /home/fedora/zeppelin-0.8.2-bin-all/notebook

	cat > "${HOME}/zeppelin-0.8.2-bin-all/notebook/.git/hooks/post-commit" << EOF
	#!/bin/sh
	git push 

	EOF

	chmod +x ${HOME}/zeppelin-0.8.2-bin-all/notebook/.git/hooks/post-commit
	/home/fedora/zeppelin-0.8.2-bin-all/bin/zeppelin-daemon.sh restart
	'

	> Cloning into '/home/fedora/zeppelin-0.8.2-bin-all/notebook'...
	  Zeppelin stop                                              [  OK  ]
	  Zeppelin start                                             [  OK  ]

	# Success



# -----------------------------------------------------
# Run a test notebook ..
#[user@zeppelin]

    # Import from URL
    # Good astrometric solutions via ML Random Forrest classifier
    https://raw.githubusercontent.com/wfau/aglais-notebooks/main/2FRPC4BFS/note.json

        Works

        Initial select
	Took 12 min 31 sec. Last updated by gaiauser at March 24 2021, 7:50:13 PM.


        Forrest Classifier
	rf = RandomForestClassifier(featureSubsetStrategy = 'sqrt', featuresCol = 'features', labelCol = 'label', numTrees = 500, impurity = 'gini', seed=42)
	Took 15 min 45 sec. Last updated by gaiauser at March 24 2021, 8:06:14 PM.


        # Rest of Notebook runs Successfully

