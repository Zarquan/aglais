#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#

    Kubernetes dashboard
    https://github.com/kubernetes/dashboard

    Kubernetes dashboard Helm chart
    https://hub.helm.sh/charts/k8s-dashboard/kubernetes-dashboard


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    source "${HOME:?}/aglais.env"

    podman run \
        --rm \
        --tty \
        --interactive \
        --name dashboard \
        --hostname dashboard \
        --publish 127.0.0.1:8443:8443 \
        --env "clouduser=${AGLAIS_USER:?}" \
        --env "cloudname=${AGLAIS_CLOUD:?}" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE}/experiments/zrq/kubernetes:/kubernetes:z" \
        atolmis/openstack-client \
        bash

# -----------------------------------------------------
# Set the cloud and cluster names.
#[user@kubernator]

    cloudname=gaia-prod
    clustername=drupal-one


# -----------------------------------------------------
# Get the connection details for our cluster.
#[user@kubernator]

    mkdir -p "${HOME}/.kube/${clustername:?}"
    openstack \
        --os-cloud "${cloudname:?}-super" \
        coe cluster config \
            "${clustername:?}" \
                --force \
                --dir "${HOME}/.kube/${clustername:?}"


# -----------------------------------------------------
# Deploy the dashboard (recomended method).
# https://github.com/kubernetes/dashboard
# https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.3/aio/deploy/recommended.yaml
#[root@dashboard]

    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        apply --filename /kubernetes/dashboard/dashboard-deploy.yaml

--START--
namespace/kubernetes-dashboard created
serviceaccount/kubernetes-dashboard created
service/kubernetes-dashboard created
secret/kubernetes-dashboard-certs created
secret/kubernetes-dashboard-csrf created
secret/kubernetes-dashboard-key-holder created
configmap/kubernetes-dashboard-settings created
role.rbac.authorization.k8s.io/kubernetes-dashboard created
clusterrole.rbac.authorization.k8s.io/kubernetes-dashboard created
rolebinding.rbac.authorization.k8s.io/kubernetes-dashboard created
clusterrolebinding.rbac.authorization.k8s.io/kubernetes-dashboard created
deployment.apps/kubernetes-dashboard created
service/dashboard-metrics-scraper created
deployment.apps/dashboard-metrics-scraper created
--END--


# -----------------------------------------------------
# Create our dashboard user account.
# https://github.com/kubernetes/dashboard/blob/master/docs/user/access-control/creating-sample-user.md
#[root@dashboard]

    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        create \
            --filename "/kubernetes/dashboard/dashboard-account.yaml"

--START--
serviceaccount/dashboard-user created
clusterrolebinding.rbac.authorization.k8s.io/dashboard-user created
--END--


# -----------------------------------------------------
# Get the secret token for our dashboard user account.
#[root@dashboard]

    kubectl \
        --output json \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        --namespace kubernetes-dashboard \
            get secret \
    | jq -r '.items[] | select(.metadata.annotations."kubernetes.io/service-account.name" == "dashboard-user") | .data.token'

--START--
ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpSjkuZXlKcGMzTWlPaUpyZFdKbGNtNWxkR1Z6TDNObGNuWnBZMlZoWTJOdmRXNTBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5dVlXMWxjM0JoWTJVaU9pSnJkV0psY201bGRHVnpMV1JoYzJoaWIyRnlaQ0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVmpjbVYwTG01aGJXVWlPaUprWVhOb1ltOWhjbVF0ZFhObGNpMTBiMnRsYmkxa2RHTTFOaUlzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG01aGJXVWlPaUprWVhOb1ltOWhjbVF0ZFhObGNpSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWeWRtbGpaUzFoWTJOdmRXNTBMblZwWkNJNklqSmtNelk0TVdZNExUUm1PVEV0TkRKa1pTMWlZamxrTFdSbU1XTTFaR0l6TVRRMFl5SXNJbk4xWWlJNkluTjVjM1JsYlRwelpYSjJhV05sWVdOamIzVnVkRHByZFdKbGNtNWxkR1Z6TFdSaGMyaGliMkZ5WkRwa1lYTm9ZbTloY21RdGRYTmxjaUo5LkdMZzI4enMzVm9abmtwb2JnQ3AydHZmQWRYdDdYZkh4anRrTWpLbWxGTjZjeVRZelhWbURXamVWWEdELVZRR2JDZWJwV2VRc3oxZ0pZRVJjUVllaTczWHFXUW1ka183VVlBQzZqR1VyNkNDeVpMbDJHV19waFNxM0paNDFRTWZkajRTVU53Nmc3TDFVeWlVMnJfRk02REVyYTZYRHRvSVRtaUNqeEhoMEQ1RGRHanhBam5CVGdmeDBRNklqaVNmOHlnZGlNNmJBOWszZkF0OHQ2UlU2QWN5THE0X0JNYXhMektlcWlVbDAyUHYxTE5jQUFaMzBpZ1NWelVhUWMwOWh4dGxaVjRJQnRQWFA5ZngwUlFVRXpGS2RFWXh5UXVVTEtfdFl5QWtFSXI3c3ZLSXBfX1Y0bDU4MG8tektiZHM2cERtUGQxTjQ3Q3dfVF85OGlCaFhldw==
--END--


# -----------------------------------------------------
# Use command line tool to decode the secret.
#[root@dashboard]

    kubectl \
        --output json \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        --namespace kubernetes-dashboard \
            get secret \
    | jq -r '.items[] | select(.metadata.annotations."kubernetes.io/service-account.name" == "dashboard-user") | .data.token' \
    | base64 --decode


--START--
eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlcm5ldGVzLWRhc2hib2FyZCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJkYXNoYm9hcmQtdXNlci10b2tlbi1kdGM1NiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJkYXNoYm9hcmQtdXNlciIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjJkMzY4MWY4LTRmOTEtNDJkZS1iYjlkLWRmMWM1ZGIzMTQ0YyIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlcm5ldGVzLWRhc2hib2FyZDpkYXNoYm9hcmQtdXNlciJ9.GLg28zs3VoZnkpobgCp2tvfAdXt7XfHxjtkMjKmlFN6cyTYzXVmDWjeVXGD-VQGbCebpWeQsz1gJYERcQYei73XqWQmdk_7UYAC6jGUr6CCyZLl2GW_phSq3JZ41QMfdj4SUNw6g7L1UyiU2r_FM6DEra6XDtoITmiCjxHh0D5DdGjxAjnBTgfx0Q6IjiSf8ygdiM6bA9k3fAt8t6RU6AcyLq4_BMaxLzKeqiUl02Pv1LNcAAZ30igSVzUaQc09hxtlZV4IBtPXP9fx0RQUEzFKdEYxyQuULK_tYyAkEIr7svKIp__V4l580o-zKbds6pDmPd1N47Cw_T_98iBhXew
--END--

# -----------------------------------------------------
# Use JQ to decode the secret.
#
#[root@dashboard]

    kubectl \
        --output json \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        --namespace kubernetes-dashboard \
            get secret \
    | jq -r '.items[] | select(.metadata.annotations."kubernetes.io/service-account.name" == "dashboard-user") | .data.token | @base64d'

--START--
eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlcm5ldGVzLWRhc2hib2FyZCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJkYXNoYm9hcmQtdXNlci10b2tlbi1kdGM1NiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJkYXNoYm9hcmQtdXNlciIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjJkMzY4MWY4LTRmOTEtNDJkZS1iYjlkLWRmMWM1ZGIzMTQ0YyIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlcm5ldGVzLWRhc2hib2FyZDpkYXNoYm9hcmQtdXNlciJ9.GLg28zs3VoZnkpobgCp2tvfAdXt7XfHxjtkMjKmlFN6cyTYzXVmDWjeVXGD-VQGbCebpWeQsz1gJYERcQYei73XqWQmdk_7UYAC6jGUr6CCyZLl2GW_phSq3JZ41QMfdj4SUNw6g7L1UyiU2r_FM6DEra6XDtoITmiCjxHh0D5DdGjxAjnBTgfx0Q6IjiSf8ygdiM6bA9k3fAt8t6RU6AcyLq4_BMaxLzKeqiUl02Pv1LNcAAZ30igSVzUaQc09hxtlZV4IBtPXP9fx0RQUEzFKdEYxyQuULK_tYyAkEIr7svKIp__V4l580o-zKbds6pDmPd1N47Cw_T_98iBhXew
--END--



# -----------------------------------------------------
# Get the deployed pod name.
#[root@dashboard]

    podname=$(
        kubectl \
            --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
            get pods \
                --namespace kubernetes-dashboard \
                --selector "k8s-app=kubernetes-dashboard" \
                --output jsonpath="{.items[0].metadata.name}"
        )

    echo "Pod name [${podname:?}]"

--START--
Pod name [kubernetes-dashboard-65bb64d6cb-5zcvq]
--END--

# -----------------------------------------------------
# Setup the port forward.
#[root@dashboard]

    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        --namespace kubernetes-dashboard \
            port-forward "${podname:?}" 8443:8443

--START--
Forwarding from 127.0.0.1:8443 -> 8443
Forwarding from [::1]:8443 -> 8443
....
--END--

# -----------------------------------------------------
# -----------------------------------------------------
# Point firefox at the proxy port.
#[user@desktop]

    firefox "https://localhost:8443/#/login" &


