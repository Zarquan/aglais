#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#

    Deploy Dashboard with Ingress using the Helm chart.
    Export the Ingress configuration to see how it works.
    See if this dashboard configuration is useable for development.

# -----------------------------------------------------

    # Deleted old cluster.
    # notes/zrq/20200718-03-openstack-delete.txt

    # Created new cluster.
    # notes/zrq/20200718-04-terraform-create.txt

# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    source "${HOME}/aglais.env"

    podman run \
        --rm \
        --tty \
        --interactive \
        --hostname kubernator \
        --publish 127.0.0.1:8443:8443 \
        --env "cloudname=${AGLAIS_CLOUD:?}" \
        --env "clustername=${MAGNUM_CLUSTER:?}" \
        --volume "${HOME}/clouds.yaml:/etc/openstack/clouds.yaml:z" \
        --volume "${AGLAIS_CODE}/experiments/zrq/kubernetes:/kubernetes:z" \
        --volume "${ZEPPELIN_CODE}:/zeppelin:z" \
        atolmis/openstack-client \
        bash


# -----------------------------------------------------
# Get the connection details for our cluster.
#[user@kubernator]

    mkdir -p "${HOME}/.kube"
    openstack \
        --os-cloud "${cloudname:?}-super" \
        coe cluster config \
            "${clustername:?}" \
                --force \
                --dir "${HOME}/.kube"

    >   'SHELL'


# -----------------------------------------------------
# Install Dashboard using Helm.
# https://github.com/kubernetes/dashboard/tree/master/aio/deploy/helm-chart/kubernetes-dashboard
#[user@kubernator]

    helm repo add \
        kubernetes-dashboard \
        https://kubernetes.github.io/dashboard/

    >   "kubernetes-dashboard" has been added to your repositories

    options=(
        ingress.enabled=true,
        ingress.hosts=aglais-001.metagrid.xyz
        )

    echo "Options [${options[*]}]"

    helm install \
        valeria \
        kubernetes-dashboard/kubernetes-dashboard \
        --set "${options[*]}"

    >   NAME: valeria
    >   LAST DEPLOYED: Fri Jul 31 17:50:38 2020
    >   NAMESPACE: default
    >   STATUS: deployed
    >   REVISION: 1
    >   TEST SUITE: None
    >   ....
    >   ....


# -----------------------------------------------------
# Check what was installed.
#[user@kubernator]

    kubectl get Pods -A

    >   NAMESPACE   NAME                                            READY   STATUS      RESTARTS   AGE
    >   ....
    >   default     valeria-kubernetes-dashboard-68c8575456-mr8dq   1/1     Running     0          38s
    >   ....


    kubectl get Services -A

    >   NAMESPACE       NAME                            TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)      AGE
    >   ....
    >   default         valeria-kubernetes-dashboard    ClusterIP   10.254.20.184    <none>        443/TCP      75s
    >   ....


    kubectl get ServiceAccount -A

    >   NAMESPACE         NAME                              SECRETS   AGE
    >   ....
    >   default           valeria-kubernetes-dashboard      1         104s
    >   ....


    kubectl get ClusterRole -A

    >   NAME                                        AGE
    >   ....
    >   valeria-kubernetes-dashboard-metrics        2m14s
    >   ....


    kubectl get ClusterRoleBinding -A

    >   NAME                                        AGE
    >   ....
    >   valeria-kubernetes-dashboard-metrics        3m11s
    >   ....


    kubectl get Ingress -A

    >   NAMESPACE   NAME                           HOSTS   ADDRESS   PORTS   AGE
    >   default     valeria-kubernetes-dashboard   *                 80      8m56s


# -----------------------------------------------------
# Check what the details of the Ingress.
#[user@kubernator]

    kubectl get Ingress \
        --output json \
        valeria-kubernetes-dashboard

    >   {
    >       "apiVersion": "extensions/v1beta1",
    >       "kind": "Ingress",
    >       "metadata": {
    >           "annotations": {
    >               "meta.helm.sh/release-name": "valeria",
    >               "meta.helm.sh/release-namespace": "default",
    >               "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS",
    >               "service.alpha.kubernetes.io/app-protocols": "{\"https\":\"HTTPS\"}"
    >           },
    >           "creationTimestamp": "2020-07-31T17:50:40Z",
    >           "generation": 1,
    >           "labels": {
    >               "app.kubernetes.io/instance": "valeria",
    >               "app.kubernetes.io/managed-by": "Helm",
    >               "app.kubernetes.io/name": "kubernetes-dashboard",
    >               "app.kubernetes.io/version": "2.0.3",
    >               "helm.sh/chart": "kubernetes-dashboard-2.3.0"
    >           },
    >           "name": "valeria-kubernetes-dashboard",
    >           "namespace": "default",
    >           "resourceVersion": "45098",
    >           "selfLink": "/apis/extensions/v1beta1/namespaces/default/ingresses/valeria-kubernetes-dashboard",
    >           "uid": "2e0655be-338c-4248-a0e9-37db15138e01"
    >       },
    >       "spec": {
    >           "rules": [
    >               {
    >                   "http": {
    >                       "paths": [
    >                           {
    >                               "backend": {
    >                                   "serviceName": "valeria-kubernetes-dashboard",
    >                                   "servicePort": 443
    >                               },
    >                               "path": "/"
    >                           }
    >                       ]
    >                   }
    >               }
    >           ]
    >       },
    >       "status": {
    >           "loadBalancer": {}
    >       }
    >   }

    # No IP address, because we haven't added the Nginx Ingress controller yet.
    # No host name, possibly because the option list included a space ?

# -----------------------------------------------------
# Try fix the hostname.
#[user@kubernator]

    helm delete \
        valeria


    options=(
        ingress.enabled=true
        ingress.hosts=aglais-001.metagrid.xyz
        )

    lista=${options[*]}
    listb=${lista// /,}

    echo "Options [${listb}]"

    helm install \
        valeria \
        kubernetes-dashboard/kubernetes-dashboard \
        --set "${listb}"

    >   Error: template: kubernetes-dashboard/templates/ingress.yaml:42:28:
    >       executing "kubernetes-dashboard/templates/ingress.yaml" at <.Values.ingress.hosts>:
    >           range can't iterate over aglais-001.metagrid.xyz

    # It didn't like spaces in the list of options to set.
    # It expects the host names to be a list, which can't be expressed in a single string.

# -----------------------------------------------------
# Try passing the options in a YAML file.
# https://github.com/kubernetes/dashboard/blob/master/aio/deploy/helm-chart/kubernetes-dashboard/values.yaml
#[user@kubernator]

    helm delete \
        valeria

    cat > /tmp/ingress-options.yaml << EOF
ingress:

  enabled: true

  paths:
    - /

  hosts:
    - aglais-001.metagrid.xyz
EOF

    helm install \
        valeria \
        kubernetes-dashboard/kubernetes-dashboard \
        --values /tmp/ingress-options.yaml



    >   NAME: valeria
    >   LAST DEPLOYED: Fri Jul 31 18:30:58 2020
    >   NAMESPACE: default
    >   STATUS: deployed
    >   REVISION: 1
    >   TEST SUITE: None
    >   NOTES:
    >   ..
    >   *** PLEASE BE PATIENT: kubernetes-dashboard may take a few minutes to install ***
    >   ..
    >   From outside the cluster, the server URL(s) are:
    >        https://aglais-001.metagrid.xyz


# -----------------------------------------------------
# Check what the details of the Ingress.
#[user@kubernator]

    kubectl get Ingress \
        --output json \
        valeria-kubernetes-dashboard

    >   {
    >       "apiVersion": "extensions/v1beta1",
    >       "kind": "Ingress",
    >       "metadata": {
    >           "annotations": {
    >               "meta.helm.sh/release-name": "valeria",
    >               "meta.helm.sh/release-namespace": "default",
    >               "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS",
    >               "service.alpha.kubernetes.io/app-protocols": "{\"https\":\"HTTPS\"}"
    >           },
    >           "creationTimestamp": "2020-07-31T18:30:59Z",
    >           "generation": 1,
    >           "labels": {
    >               "app.kubernetes.io/instance": "valeria",
    >               "app.kubernetes.io/managed-by": "Helm",
    >               "app.kubernetes.io/name": "kubernetes-dashboard",
    >               "app.kubernetes.io/version": "2.0.3",
    >               "helm.sh/chart": "kubernetes-dashboard-2.3.0"
    >           },
    >           "name": "valeria-kubernetes-dashboard",
    >           "namespace": "default",
    >           "resourceVersion": "52536",
    >           "selfLink": "/apis/extensions/v1beta1/namespaces/default/ingresses/valeria-kubernetes-dashboard",
    >           "uid": "104cf4aa-f6c2-423e-9da4-5b1ff32929aa"
    >       },
    >       "spec": {
    >           "rules": [
    >               {
    >                   "host": "aglais-001.metagrid.xyz",
    >                   "http": {
    >                       "paths": [
    >                           {
    >                               "backend": {
    >                                   "serviceName": "valeria-kubernetes-dashboard",
    >                                   "servicePort": 443
    >                               },
    >                               "path": "/"
    >                           }
    >                       ]
    >                   }
    >               }
    >           ]
    >       },
    >       "status": {
    >           "loadBalancer": {}
    >       }
    >   }

    # Fixed the hostname, using YAML file for the values is easier.
    # Still no IP address, need to add the Nginx Ingress controller.

    # Interesting to see if adding the controller _after_ the Ingress works.


# -----------------------------------------------------
# Install the Kubernetes NGINX Ingress using Helm.
# https://github.com/kubernetes/ingress-nginx/blob/master/docs/deploy/index.md#using-helm
# (*) K8s-NGINX rather than NGINX-NGINX
#[user@kubernator]

    helm repo add \
        ingress-nginx \
        https://kubernetes.github.io/ingress-nginx

    >   "ingress-nginx" has been added to your repositories


    helm install \
        augusta \
        ingress-nginx/ingress-nginx

    >   NAME: augusta
    >   LAST DEPLOYED: Fri Jul 31 18:36:00 2020
    >   NAMESPACE: default
    >   STATUS: deployed
    >   REVISION: 1
    >   TEST SUITE: None
    >   ....
    >   ....


# -----------------------------------------------------
# Check the controller version.
# https://github.com/kubernetes/ingress-nginx/blob/master/docs/deploy/index.md#detect-installed-version
#[user@kubernator]

    POD_NAMESPACE=default
    POD_NAME=$(kubectl get pods -n $POD_NAMESPACE -l app.kubernetes.io/name=ingress-nginx --field-selector=status.phase=Running -o jsonpath='{.items[0].metadata.name}')

    kubectl exec -it $POD_NAME -n $POD_NAMESPACE -- /nginx-ingress-controller --version

    >   -------------------------------------------------------------------------------
    >   NGINX Ingress controller
    >     Release:       v0.34.1
    >     Build:         v20200715-ingress-nginx-2.11.0-8-gda5fa45e2
    >     Repository:    https://github.com/kubernetes/ingress-nginx
    >     nginx version: nginx/1.19.1
    >   
    >   -------------------------------------------------------------------------------


# -----------------------------------------------------
# Check the controller IP address.
#[user@kubernator]

    kubectl get Service \
        --output json \
        augusta-ingress-nginx-controller \
    | jq -r '.status.loadBalancer.ingress[0].ip'

    >   128.232.227.228


# -----------------------------------------------------
# Update our external DNS service.

    ....
    ....
    aglais-001.metagrid.xyz.    A    128.232.227.228



# -----------------------------------------------------
# See if the Ingress was updated with the IP address.
#[user@kubernator]

    kubectl get Ingress \
        --output json \
        valeria-kubernetes-dashboard

    >   {
    >       ....
    >       ....
    >       "status": {
    >           "loadBalancer": {
    >               "ingress": [
    >                   {
    >                       "ip": "128.232.227.228"
    >                   }
    >               ]
    >           }
    >       }
    >   }


# -----------------------------------------------------
# -----------------------------------------------------
# Try accessing from outside ...
#[user@desktop]

    firefox "https://aglais-001.metagrid.xyz/" &


        # Got the site .. OK
        # Login page asking for Token or Kubeconfig file.



# -----------------------------------------------------
# Use JQ to decode the secret.
# https://github.com/stedolan/jq/issues/47#issuecomment-374179653
#[user@kubernator]

    kubectl \
        get secrets \
    | grep valeria

    >   sh.helm.release.v1.valeria.v1              helm.sh/release.v1                    1      35m
    >   valeria-kubernetes-dashboard-certs         Opaque                                0      35m
    >   valeria-kubernetes-dashboard-token-295tj   kubernetes.io/service-account-token   3      35m


    dashtoken=$(
        kubectl \
            --output json \
            get secret \
                valeria-kubernetes-dashboard-token-295tj \
        | jq -r '.data.token | @base64d'
        )

    cat << EOF
---- ----
${dashtoken:?}
---- ----
EOF

    >   ---- ----
    >   eyJh....HW9A
    >   ---- ----


# -----------------------------------------------------
# -----------------------------------------------------
# Try using the token to login ...
#[user@desktop]

    firefox "https://aglais-001.metagrid.xyz/" &

    # We can login, but we can't access any resorces :-(


    >   namespaces is forbidden:
    >       User "system:serviceaccount:default:valeria-kubernetes-dashboard"
    >           cannot list resource "namespaces" in API group "" at the cluster scope






