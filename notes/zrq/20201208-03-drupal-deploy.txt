#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#

    Target:

        Update the Drupal deployment to include OAuth server.

    Result:

        Work in progress ....

    Source:

        Follow on from Drupal Helm deploy
        notes/zrq/20201208-02-drupal-deploy.txt
        notes/zrq/20201207-01-drupal-deploy.txt

    TODO:

# -----------------------------------------------------
# Update the Drupal container image source.
#[user@desktop]

    source "${HOME}/aglais.env"
    pushd "${AGLAIS_CODE}"
        pushd experiments

            mkdir kubernetes/docker/drupal/main
            mkdir kubernetes/docker/drupal/dev

            git mv zrq/drupal/docker/Dockermod \
                   kubernetes/docker/drupal/main/Dockerfile

            cp kubernetes/docker/drupal/main/Dockerfile \
               kubernetes/docker/drupal/dev/Dockerfile

           git add kubernetes/docker/drupal/dev/Dockerfile

           gedit kubernetes/docker/drupal/main/Dockerfile

                ....
                ....

           gedit kubernetes/docker/drupal/dev/Dockerfile

                ....
                ....

        popd
    popd


# -----------------------------------------------------
# Build our Docker images.
#[user@desktoop]

    buildtag=$(date '+%Y%m%d-%H%M%S')
    buildtime=$(date '+%Y-%m-%dT%H:%M:%S')

    source "${HOME}/aglais.env"
    buildah bud \
        --format docker \
        --tag aglais/drupal-main:${buildtag:?} \
        --tag aglais/drupal-main:latest \
        --build-arg "buildtag=${buildtag:?}" \
        --build-arg "buildtime=${buildtime:?}" \
        "${AGLAIS_CODE:?}/experiments/kubernetes/docker/drupal/main"

    >   STEP 1: FROM drupal:8.9.11-apache-buster
    >   Getting image source signatures
    >   ....
    >   ....
    >   Writing manifest to image destination
    >   Storing signatures
    >   STEP 2: MAINTAINER Dave Morris <docker-admin@metagrid.co.uk>
    >   STEP 3: ARG buildtag
    >   STEP 4: ARG buildtime
    >   STEP 5: LABEL maintainer="Dave Morris <docker-admin@metagrid.co.uk>"
    >   STEP 6: LABEL buildtag="${buildtag}"
    >   STEP 7: LABEL buildtime="${buildtime}"
    >   STEP 8: LABEL gitrepo="https://github.com/wfau/aglais"
    >   STEP 9: RUN apt-get update && apt-get install unzip
    >   ....
    >   STEP 10: WORKDIR /opt/drupal
    >   STEP 11: RUN set -eux;     php -d memory_limit=-1 /usr/local/bin/composer require 'drupal/bee:^1.1'; ....
    >   STEP 12: RUN set -eux;     php -d memory_limit=-1 /usr/local/bin/composer require 'drupal/business_responsive_theme:^2.0'; ....
    >   STEP 13: COMMIT aglais/drupal-main:20201208-131705
    >   Getting image source signatures
    >   ....
    >   ....
    >   Writing manifest to image destination
    >   Storing signatures
    >   --> e97716521fb
    >   e97716521fb45fc73bfe14ec1116c02e5e0b8724a8c84eebdfe136dd1d569222


    source "${HOME}/aglais.env"
    buildah bud \
        --format docker \
        --tag aglais/drupal-dev:${buildtag:?} \
        --tag aglais/drupal-dev:latest \
        --build-arg "buildsrc=${buildtag:?}" \
        --build-arg "buildtag=${buildtag:?}" \
        --build-arg "buildtime=${buildtime:?}" \
        "${AGLAIS_CODE:?}/experiments/kubernetes/docker/drupal/dev"

    >   STEP 1: FROM aglais/drupal-main:20201208-131705
    >   STEP 2: MAINTAINER Dave Morris <docker-admin@metagrid.co.uk>
    >   STEP 3: ARG buildtag
    >   STEP 4: ARG buildtime
    >   STEP 5: LABEL maintainer="Dave Morris <docker-admin@metagrid.co.uk>"
    >   STEP 6: LABEL buildtag="${buildtag}"
    >   STEP 7: LABEL buildtime="${buildtime}"
    >   STEP 8: LABEL gitrepo="https://github.com/wfau/aglais"
    >   STEP 9: WORKDIR /opt/drupal
    >   STEP 10: RUN set -eux;     php -d memory_limit=-1 /usr/local/bin/composer require 'drupal/simple_oauth:^5.0';     php -d memory_limit=-1 /usr/local/bin/composer require 'drupal/oauth_server_sso:^1.1';
    >   + php -d memory_limit=-1 /usr/local/bin/composer require drupal/simple_oauth:^5.0
    >   Do not run Composer as root/super user! See https://getcomposer.org/root for details
    >   ./composer.json has been updated
    >   Loading composer repositories with package information
    >   Updating dependencies (including require-dev)
    >   Package operations: 7 installs, 0 updates, 0 removals
    >     - Installing lcobucci/jwt (3.4.1): Downloading (100%)
    >     - Installing defuse/php-encryption (v2.2.1): Downloading (100%)
    >     - Installing league/event (2.2.0): Downloading (100%)
    >     - Installing league/oauth2-server (8.2.3): Downloading (100%)
    >     - Installing steverhoades/oauth2-openid-connect-server (v1.3.0): Downloading (100%)
    >     - Installing drupal/consumers (1.11.0): Downloading (100%)
    >     - Installing drupal/simple_oauth (5.0.2): Downloading (100%)
    >   lcobucci/jwt suggests installing lcobucci/clock (*)
    >   Writing lock file
    >   Generating autoload files
    >   28 packages you are using are looking for funding.
    >   Use the `composer fund` command to find out more!
    >   + php -d memory_limit=-1 /usr/local/bin/composer require drupal/oauth_server_sso:^1.1
    >   Do not run Composer as root/super user! See https://getcomposer.org/root for details
    >   ./composer.json has been updated
    >   Loading composer repositories with package information
    >   Updating dependencies (including require-dev)
    >   Package operations: 1 install, 0 updates, 0 removals
    >     - Installing drupal/oauth_server_sso (1.1.0): Downloading (100%)
    >   Writing lock file
    >   Generating autoload files
    >   28 packages you are using are looking for funding.
    >   Use the `composer fund` command to find out more!
    >   STEP 11: COMMIT aglais/drupal-dev:20201208-131705
    >   Getting image source signatures
    >   Copying blob f5600c6330da skipped: already exists
    >   Copying blob 3855c00ce1fc skipped: already exists
    >   Copying blob 7a17eb00e8b7 skipped: already exists
    >   Copying blob dfad4a4c6fc6 skipped: already exists
    >   Copying blob c8713c5be33e skipped: already exists
    >   Copying blob 22dd6506ddde skipped: already exists
    >   Copying blob 0cdcacf15210 skipped: already exists
    >   Copying blob f7dfacc049d5 skipped: already exists
    >   Copying blob 6ff5b938292f skipped: already exists
    >   Copying blob dd99ca928e7f skipped: already exists
    >   Copying blob 5b5e42157ced skipped: already exists
    >   Copying blob 9e6a244a100a skipped: already exists
    >   Copying blob 0d68fab0aef8 skipped: already exists
    >   Copying blob cfa369ba7e71 skipped: already exists
    >   Copying blob 44a952532c99 skipped: already exists
    >   Copying blob 3db33f85f2d6 skipped: already exists
    >   Copying blob 209ad2be374a skipped: already exists
    >   Copying blob c1aca539ff44 skipped: already exists
    >   Copying blob 2ff4f440612e skipped: already exists
    >   Copying blob e4c4fa2fe4f8 done
    >   Copying config 42ed66c512 done
    >   Writing manifest to image destination
    >   Storing signatures
    >   --> 42ed66c512c
    >   42ed66c512c8f38baf6358813853954aac06d1167f0c355aaaa2dbf9277c7818
    >   ....
    >   ....


# -----------------------------------------------------
# Push our Drupal images to the registry.
#[user@desktoop]

    buildah login \
        --username $(secret docker.io.user) \
        --password $(secret docker.io.pass) \
        registry-1.docker.io

    >   Login Succeeded!


    buildah push "aglais/drupal-main:${buildtag:?}"

    buildah push "aglais/drupal-main:latest"

    buildah push "aglais/drupal-dev:${buildtag:?}"

    buildah push "aglais/drupal-dev:latest"

    >   ....
    >   ....


# -----------------------------------------------------
# Update our Drupal Helm chart.
#[user@desktoop]

    source "${HOME}/aglais.env"
    pushd "${AGLAIS_CODE}"

        gedit experiments/kubernetes/helm/tools/drupal/values.yaml

            ....
            service:
              container:
        ~       image: "aglais/drupal-dev:latest"


    popd









