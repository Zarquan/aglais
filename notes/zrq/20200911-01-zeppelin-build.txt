#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#


    #
    # Building a new version of the Zeppelin images.
    # Pushing the images upstream from desktop takes > 12hrs and fails.
    # Building the base and main images on trop machines.
    # Using previous notes:
    # 20200722-01-trop-build.txt

# -----------------------------------------------------
# Create a virtual machine.
#[user@trop]

    createvm

    >   INFO : Node name [Wumar]
    >   INFO : Base name [fedora-31-docker-base-20200722.qcow]
    >   INFO : Base path [/var/lib/libvirt/images/base/fedora-31-docker-base-20200722.qcow]
    >   INFO : Disc name [Wumar.qcow]
    >   INFO : Disc size [32GiB]

    ssh Wumar

    >   ....
    >   ....


# -----------------------------------------------------
# Create our target directories.
#[user@wumar]

    sudo mkdir /var/local/build
    sudo mkdir /var/local/cache

    sudo chmod a+rwx /var/local/build
    sudo chmod a+rwx /var/local/cache


# -----------------------------------------------------
# Run a Java build container.
#[user@wumar]

    podman run \
        --rm \
        --tty \
        --interactive \
        --hostname builder \
        --env "SSH_AUTH_SOCK=/tmp/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK}:/tmp/ssh_auth_sock:z" \
        --volume '/var/local/cache:/var/local/cache:rw,z' \
        --volume '/var/local/build:/var/local/build:rw,z' \
        "firethorn/builder:latest" \
        bash

    >   ....
    >   ....


# -----------------------------------------------------
# Install bzip2.
# TODO Add this to our builder image.
#[root@builder]

    dnf install -y bzip2


# -----------------------------------------------------
# Add a user account to run the build.
#[root@builder]

    adduser Tinselpear
    su - Tinselpear


# -----------------------------------------------------
# Configure the source code paths.
#[user@builder]

    cat > "${HOME}/aglais.env" << 'EOF'
AGLAIS_REPO='https://github.com/Zarquan/aglais.git'
AGLAIS_HOME='/var/local/build/aglais'
AGLAIS_CODE="${AGLAIS_HOME:?}/github-zrq"
AGLAIS_CLOUD=gaia-prod
AGLAIS_USER=albert

ZEPPELIN_REPO='https://github.com/Zarquan/aglais-zeppelin.git'
ZEPPELIN_HOME='/var/local/build/aglais-zeppelin'
ZEPPELIN_CODE="${ZEPPELIN_HOME:?}/github-zrq"
EOF


# -----------------------------------------------------
# Create our getsource function.
#[user@builder]

    getsource()
        {
        local coderepo=${1:?}
        local codepath=${2:?}

        echo "Checking [$(dirname ${codepath:?})]"
        if [ ! -e "$(dirname ${codepath:?})" ]
        then
            echo "Creating [$(dirname ${codepath:?})]"
            mkdir --parents "$(dirname ${codepath:?})"
        fi

        echo "Checking [${codepath:?}]"
        if [ ! -e "${codepath:?}" ]
        then
            echo "Creating [${codepath:?}]"
            pushd "$(dirname ${codepath:?})"
                git clone "${coderepo:?}" "$(basename ${codepath:?})"
            popd
        else
            echo "Updating [${codepath:?}]"
            pushd "${codepath:?}"
                git pull
            popd
        fi

        }


# -----------------------------------------------------
# Clone our Aglais source code.
#[user@builder]

    source "${HOME}/aglais.env"

    getsource "${AGLAIS_REPO:?}" "${AGLAIS_CODE:?}"

# -----------------------------------------------------
# Checkout our working branch.
#[user@builder]

    devbranch=20200908-zrq-integration

    source "${HOME}/aglais.env"
    pushd "${AGLAIS_CODE:?}"
        git checkout "${devbranch:?}"
    popd

    >   Branch '20200908-zrq-integration' set up to track remote branch '20200908-zrq-integration' from 'origin'.
    >   Switched to a new branch '20200908-zrq-integration'


# -----------------------------------------------------
# Clone our Zeppelin source code.
#[user@builder]

    source "${HOME}/aglais.env"

    getsource "${ZEPPELIN_REPO:?}" "${ZEPPELIN_CODE:?}"


# -----------------------------------------------------
# Checkout our working branch.
#[user@builder]

    devbranch=20200911-zrq-devel

    source "${HOME}/aglais.env"
    pushd "${ZEPPELIN_CODE:?}"
        git checkout "${devbranch:?}"
    popd

    >   Branch '20200911-zrq-devel' set up to track remote branch '20200911-zrq-devel' from 'origin'.
    >   Switched to a new branch '20200911-zrq-devel'



# -----------------------------------------------------
# Build our Zeppelin code.
#[user@builder]

    source "${HOME}/aglais.env"
    pushd  "${ZEPPELIN_CODE:?}"

        mvn clean package -D skipTests -P build-distr -P hadoop3

    popd

    >   ....
    >   ....
    >   [INFO] ------------------------------------------------------------------------
    >   [INFO] BUILD SUCCESS
    >   [INFO] ------------------------------------------------------------------------
    >   [INFO] Total time: 16:56 min
    >   [INFO] Finished at: 2020-09-11T19:20:04Z
    >   [INFO] Final Memory: 455M/875M
    >   [INFO] ------------------------------------------------------------------------


# -----------------------------------------------------
# Identify the build result.
#[user@builder]

    source "${HOME}/aglais.env"

    zepversion=$(
        sed -n '
            s/^.*<version project="zeppelin">\(.*\)<\/version>.*$/\1/ p
            ' "${ZEPPELIN_CODE:?}/pom.xml"
        )

    zepresult=zeppelin-distribution/target/zeppelin-${zepversion:?}/zeppelin-${zepversion:?}


# -----------------------------------------------------
# Check how much the distribution contains.
#[user@builder]

    source "${HOME}/aglais.env"

    du -d 1 -h "${ZEPPELIN_CODE:?}/${zepresult:?}"

    >   ....
    >   2.0G	/var/local/build/aglais-zeppelin/github-zrq/zeppelin-distribution/target/zeppelin-0.9.0-aglais-0.0.1/zeppelin-0.9.0-aglais-0.0.1

# -----------------------------------------------------
# Copy Zeppelin config files into our target.
#[user@builder]

    cp -f "${AGLAIS_CODE}/experiments/zrq/zeppelin/docker/log4j.properties" \
       "${ZEPPELIN_CODE}/${zepresult:?}"


# -----------------------------------------------------
# Drop back to root to build our images.
#[user@builder]

    exit

    #
    # Ideally we would do this as Tinselpear,
    # but we need access to our SSH_AUTH_SOCK
    # to be able to access our secrets.
    #

# -----------------------------------------------------
# Configure the source code paths.
#[root@builder]

    cat > "${HOME}/aglais.env" << 'EOF'
AGLAIS_REPO='https://github.com/Zarquan/aglais.git'
AGLAIS_HOME='/var/local/build/aglais'
AGLAIS_CODE="${AGLAIS_HOME:?}/github-zrq"
AGLAIS_CLOUD=gaia-prod
AGLAIS_USER=albert

ZEPPELIN_REPO='https://github.com/Zarquan/aglais-zeppelin.git'
ZEPPELIN_HOME='/var/local/build/aglais-zeppelin'
ZEPPELIN_CODE="${ZEPPELIN_HOME:?}/github-zrq"
EOF


# -----------------------------------------------------
# Install buildah.
#[root@builder]

    dnf install -y buildah


# -----------------------------------------------------
# Build our base image.
#[root@builder]

    source "/etc/aglais.env"

    buildtag=$(date '+%Y.%m.%d')
    buildtime=$(date '+%Y-%m-%dT%H:%M:%S')

    emptydir=$(mktemp -d)

    buildah bud \
        --format docker \
        ....
        ....

    >   ERRO[0000] 'overlay' is not supported over <unknown> at "/var/lib/containers/storage/overlay"
    >   kernel does not support overlay fs: 'overlay' is not supported over <unknown> at "/var/lib/containers/storage/overlay": backing file system is unsupported for this graph driver
    >   ERRO[0000] exit status 1


# -----------------------------------------------------
# Drop back to the virtual machine to build our images.
#[root@builder]

    exit

    #
    # Ideally we would do this inside the builder
    # but we run into problems with the filesystem.
    #


# -----------------------------------------------------
# Install buildah.
# TODO Add this to the builder image.
#[user@wumar]

    sudo dnf install -y buildah


# -----------------------------------------------------
# Create our secret method.
#[user@wumar]

    mkdir ${HOME}/bin
    cat > ${HOME}/bin/secret << 'EOF'
ssh -n \
    'Zarquan@data.metagrid.co.uk' \
    "bin/secret '${1}'"
EOF
    chmod a+x ${HOME}/bin/secret

    secret frog

    >   Green Frog


# -----------------------------------------------------
# Configure the source code paths.
#[user@wumar]

    cat > "${HOME}/aglais.env" << 'EOF'
AGLAIS_REPO='https://github.com/Zarquan/aglais.git'
AGLAIS_HOME='/var/local/build/aglais'
AGLAIS_CODE="${AGLAIS_HOME:?}/github-zrq"
AGLAIS_CLOUD=gaia-prod
AGLAIS_USER=albert

ZEPPELIN_REPO='https://github.com/Zarquan/aglais-zeppelin.git'
ZEPPELIN_HOME='/var/local/build/aglais-zeppelin'
ZEPPELIN_CODE="${ZEPPELIN_HOME:?}/github-zrq"
EOF

# -----------------------------------------------------
# Identify the build result.
#[user@wumar]

    source "${HOME}/aglais.env"

    zepversion=$(
        sed -n '
            s/^.*<version project="zeppelin">\(.*\)<\/version>.*$/\1/ p
            ' "${ZEPPELIN_CODE:?}/pom.xml"
        )

    zepresult=zeppelin-distribution/target/zeppelin-${zepversion:?}/zeppelin-${zepversion:?}


# -----------------------------------------------------
# Build our base image.
#[user@wumar]

    source "${HOME}/aglais.env"

    buildtag=$(date '+%Y.%m.%d')
    buildtime=$(date '+%Y-%m-%dT%H:%M:%S')

    emptydir=$(mktemp -d)

    buildah bud \
        --format docker \
        --tag aglais/zeppelin-base:latest \
        --tag aglais/zeppelin-base:${buildtag:?} \
        --build-arg "buildtag=${buildtag:?}" \
        --build-arg "buildtime=${buildtime:?}" \
        --file "${AGLAIS_CODE:?}/experiments/zrq/zeppelin/docker/Dockerbase" \
        "${emptydir:?}"

    >   ....
    >   ....


# -----------------------------------------------------
# Login to Docker hub.
#[user@wumar]

    podman login \
        --username $(secret docker.io.user) \
        --password $(secret docker.io.pass) \
        registry-1.docker.io

    >   Login Succeeded!


# -----------------------------------------------------
# Push our base image to Docker hub.
#[user@wumar]

    podman push "aglais/zeppelin-base:${buildtag:?}"

    podman push "aglais/zeppelin-base:latest"


# -----------------------------------------------------
# Build our main Zeppelin image.
#[user@wumar]

    source "${HOME}/aglais.env"

    buildsrc=${buildtag:?}
    buildtag=$(date '+%Y.%m.%d')
    buildtime=$(date '+%Y-%m-%dT%H:%M:%S')

    buildah bud \
        --format docker \
        --tag aglais/zeppelin-main:latest \
        --tag aglais/zeppelin-main:${buildtag:?} \
        --build-arg "buildsrc=${buildsrc:?}" \
        --build-arg "buildtag=${buildtag:?}" \
        --build-arg "buildtime=${buildtime:?}" \
        --file "${AGLAIS_CODE:?}/experiments/zrq/zeppelin/docker/Dockerfile" \
        "${ZEPPELIN_CODE:?}/${zepresult:?}"

    >   ....
    >   ....


# -----------------------------------------------------
# Build our modified Zeppelin image.
#[user@wumar]

    # This includes shiro.ini with hard test users.
    # This includes an interpreter-spec with hard coded PVC.

    buildsrc=${buildtag:?}
    buildtag=$(date '+%Y.%m.%d')
    buildtime=$(date '+%Y-%m-%dT%H:%M:%S')

    buildah bud \
        --format docker \
        --tag aglais/zeppelin-mod:latest \
        --tag aglais/zeppelin-mod:${buildtag:?} \
        --build-arg "buildsrc=${buildsrc:?}" \
        --build-arg "buildtag=${buildtag:?}" \
        --build-arg "buildtime=${buildtime:?}" \
        --file "${AGLAIS_CODE}/experiments/zrq/zeppelin/docker/Dockermod" \
        "${AGLAIS_CODE:?}/experiments/zrq/zeppelin"

    >   ....
    >   ....


# -----------------------------------------------------
# Build our Spark image.
#[user@wumar]

    #
    # Use the base image created on 2020-07-22
    # 20200722-03-spark-k8s.txt
    #

# -----------------------------------------------------
# Build our PySpark image.
#[user@wumar]

    #
    # Use the base image created on 2020-07-22
    # 20200722-03-spark-k8s.txt
    #

# -----------------------------------------------------
# Build our Spark mod.
#[user@wumar]

    #
    # Adds the modified AWS jar built locally.
    # TODO Push the modified AWS jar to our Maven cache.
    # 20200811-02-aws-debug.txt
    #

# -----------------------------------------------------
# Build our PySpark mod.
#[user@wumar]

    #
    # Adds the modified AWS jar built locally.
    # TODO Push the modified AWS jar to our Maven cache.
    # 20200811-02-aws-debug.txt
    #


# -----------------------------------------------------
# Push our images to Docker hub.
#[user@wumar]

    podman push "aglais/zeppelin-main:${buildtag:?}"

    podman push "aglais/zeppelin-main:latest"

# -----------------------------------------------------
# Push our images to Docker hub.
#[user@wumar]

    podman push "aglais/zeppelin-mod:${buildtag:?}"

    podman push "aglais/zeppelin-mod:latest"








# -----------------------------------------------------
# Edit our copy of the Zeppelin deployment template.
#[user@desktop]

    gedit "${AGLAIS_CODE:?}/experiments/zrq/zeppelin/k8s/zeppelin-server.yaml"

        ....
        ....

    diff "${ZEPPELIN_CODE:?}/k8s/zeppelin-server.yaml" \
         "${AGLAIS_CODE:?}/experiments/zrq/zeppelin/k8s/zeppelin-server.yaml"


    >   31,32c31,32
    >   <   ZEPPELIN_K8S_SPARK_CONTAINER_IMAGE: spark:2.4.5
    >   <   ZEPPELIN_K8S_CONTAINER_IMAGE: apache/zeppelin:0.9.0-SNAPSHOT
    >   ---
    >   >   ZEPPELIN_K8S_SPARK_CONTAINER_IMAGE: aglais/pyspark-mod:2020.08.11
    >   >   ZEPPELIN_K8S_CONTAINER_IMAGE: aglais/zeppelin-mod:2020.08.27.06.47.11
    >   118c118
    >   <         image: apache/zeppelin:0.9.0-SNAPSHOT
    >   ---
    >   >         image: aglais/zeppelin-mod:2020.08.27.06.47.11

