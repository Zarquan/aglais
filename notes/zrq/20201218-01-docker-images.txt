#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#


    Target:

        Tidy up our Docker images, start from a common base and add all the extras we need.

    Result:

        Work in progress ...


    Crap we had to wade through to set the locale.
    Hours wasted looking this stuff up - FIX THIs already !!!

        https://serverfault.com/questions/362903/how-do-you-set-a-locale-non-interactively-on-debian-ubuntu
        https://serverfault.com/questions/227190/how-do-i-ask-apt-get-to-skip-any-interactive-post-install-configuration-steps
        https://snippets.aktagon.com/snippets/614-how-to-fix-bash-warning-setlocale-lc-all-cannot-change-locale-en-us-
        https://www.linuxquestions.org/questions/linux-newbie-8/bash-warning-setlocale-lc_all-cannot-change-locale-en-us-utf-8-a-4175628657/
        https://people.debian.org/~schultmc/locales.html
        https://github.com/dotnet/buildtools/issues/1471
        https://github.com/tianon/docker-brew-debian/issues/45

    Why do we need to use the Anaconda install of Python ?
    https://towardsdatascience.com/which-python-package-manager-should-you-use-d0fd0789a250

        Virtualenv and Anaconda create environments to isolate different libraries and versions.
        OK if you want multiple dev environments on the same laptop.
        We only want one environment in our container - that's why we are using a container.

        Anaconda also introduces its own package manager, called conda, from where you can install libraries.
        .. our Dockerfile installs everything from pip, so why use conda ?





# -----------------------------------------------------
# Move the Zeppelin Dockerfiles.
#[user@desktop]

    source "${HOME}/aglais.env"
    pushd "${AGLAIS_CODE}"
        pushd experiments

            mkdir kubernetes/docker/zeppelin/base
            git mv zrq/zeppelin/docker/Dockerbase \
                kubernetes/docker/zeppelin/base/Dockerfile

            mkdir kubernetes/docker/zeppelin/main
            git mv zrq/zeppelin/docker/Dockerfile \
                kubernetes/docker/zeppelin/main/Dockerfile

            git mv zrq/zeppelin/docker/log4j.properties \
                kubernetes/docker/zeppelin/main

            mkdir kubernetes/docker/zeppelin/dev
            git mv zrq/zeppelin/docker/Dockermod \
                kubernetes/docker/zeppelin/dev/Dockerfile

            mkdir kubernetes/docker/zeppelin/dev/conf
            git mv zrq/zeppelin/conf/shiro.ini \
                kubernetes/docker/zeppelin/dev/conf

            mkdir kubernetes/docker/zeppelin/dev/k8s
            mkdir kubernetes/docker/zeppelin/dev/k8s/interpreter
            git mv zrq/zeppelin/k8s/interpreter/100-interpreter-spec.yaml \
                kubernetes/docker/zeppelin/dev/k8s/interpreter

            mkdir kubernetes/docker/zeppelin/dev/lib
            git mv zrq/zeppelin/lib/empty \
                kubernetes/docker/zeppelin/dev/lib/empty
            git mv zrq/zeppelin/.gitignore \
                kubernetes/docker/zeppelin/dev/.gitignore

        popd
    popd


# -----------------------------------------------------
# Test the Zepplein Dockerfiles.
#[user@desktop]

    source "${HOME}/aglais.env"
    buildtag=$(date '+%Y%m%d-%H%M%S')
    buildtime=$(date '+%Y-%m-%dT%H:%M:%S')

    buildah bud \
        --format docker \
        --tag aglais/zeppelin-base:latest \
        --tag aglais/zeppelin-base:${buildtag:?} \
        --build-arg "buildtag=${buildtag:?}" \
        --build-arg "buildtime=${buildtime:?}" \
        "${AGLAIS_CODE:?}/experiments/kubernetes/docker/zeppelin/base"



    source "${HOME}/aglais.env"
    buildsrc=${buildtag:?}
    buildtag=$(date '+%Y%m%d-%H%M%S')
    buildtime=$(date '+%Y-%m-%dT%H:%M:%S')

    buildah bud \
        --format docker \
        --tag aglais/zeppelin-main:latest \
        --tag aglais/zeppelin-main:${buildtag:?} \
        --build-arg "buildsrc=${buildsrc:?}" \
        --build-arg "buildtag=${buildtag:?}" \
        --build-arg "buildtime=${buildtime:?}" \
        "${AGLAIS_CODE:?}/experiments/kubernetes/docker/zeppelin/main"



    source "${HOME}/aglais.env"
    buildsrc=${buildtag:?}
    buildtag=$(date '+%Y%m%d-%H%M%S')
    buildtime=$(date '+%Y-%m-%dT%H:%M:%S')

    buildah bud \
        --format docker \
        --tag aglais/zeppelin-dev:latest \
        --tag aglais/zeppelin-dev:${buildtag:?} \
        --build-arg "buildsrc=${buildsrc:?}" \
        --build-arg "buildtag=${buildtag:?}" \
        --build-arg "buildtime=${buildtime:?}" \
        "${AGLAIS_CODE:?}/experiments/kubernetes/docker/zeppelin/dev"



# -----------------------------------------------------
# Fixes involved ....


https://serverfault.com/questions/362903/how-do-you-set-a-locale-non-interactively-on-debian-ubuntu
https://serverfault.com/a/801162


    gedit "${AGLAIS_CODE:?}/experiments/kubernetes/docker/zeppelin/base/Dockerfile"

    +   # Change from Ubuntu to Debian
    +   # https://wiki.debian.org/DebianReleases
    ~   FROM debian:10.7-slim


    +   # Set the locale
    +   # https://serverfault.com/questions/362903/how-do-you-set-a-locale-non-interactively-on-debian-ubuntu
    +   ENV DEBIAN_FRONTEND=noninteractive
    +   RUN echo "$LOG_TAG configure locale" && \
    +       apt-get -y update && \
    +       apt-get install -y locales && \
    +       echo "$LANG UTF-8" > /etc/locale.gen && \
    +       dpkg-reconfigure --frontend=noninteractive locales && \
    +       update-locale LANG=$LANG


    +   # Create missing man directories.
    +   # https://github.com/debuerreotype/debuerreotype/issues/10
    +   # https://github.com/libvirt/libvirt-ci/commit/9cd2f73597e1599330e9657d51200eb0d2052bb2
    +   RUN mkdir -p /usr/share/man/man1


    +   # Update from openjdk-8-jdk to openjdk-11-jdk
    +   # https://stackoverflow.com/questions/57031649/how-to-install-openjdk-8-jdk-on-debian-10-buster
    +   # https://serverfault.com/questions/974992/why-isnt-there-a-openjdk-8-jdk-package-on-debian-anymore
    ~   ENV JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
    ~   RUN echo "$LOG_TAG Install java11" && \
            apt-get -y update && \
    ~       apt-get install -y openjdk-11-jdk && \
            rm -rf /var/lib/apt/lists/*

    +   # Add libgit2-dev dependency for `gert`.
    ~   apt-get -y install libcurl4-gnutls-dev libssl-dev libgit2-dev && \







# -----------------------------------------------------
# Update the zeppelin-dev build.
#[user@desktop]

    source "${HOME:?}/aglais.env"




