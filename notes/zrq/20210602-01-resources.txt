#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2021, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#

    Target:

        Run the available resources tests again to figure out what the limits are.

    Result:

        Work in progress ..

# -----------------------------------------------------
# Create a new branch for the resource tests.
#[user@desktop]

    source "${HOME}/aglais.env"
    pushd  "${AGLAIS_CODE}"

        nextbranch=$(date '+%Y%m%d')-zrq-resources

        git checkout master

        git checkout -b "${nextbranch:?}"

        git push --set-upstream origin "${nextbranch:?}"

    popd


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    source "${HOME:?}/aglais.env"

    podman run \
        --rm \
        --tty \
        --interactive \
        --name ansibler \
        --hostname ansibler \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK}:/mnt/ssh_auth_sock:rw,z" \
        --env "cloudname=${AGLAIS_CLOUD:?}" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/experiments/common:/common:ro,z" \
        --volume "${AGLAIS_CODE:?}/experiments/openstack:/openstack:ro,z" \
        --volume "${AGLAIS_CODE:?}/experiments/hadoop-yarn:/hadoop-yarn:ro,z" \
        atolmis/ansible-client:2020.12.02 \
        bash


# -----------------------------------------------------
# Delete everything from all three clouds.
#[root@ansibler]

    time \
        /openstack/bin/delete-all.sh \
            'gaia-dev'

    >   ....
    >   ....


    time \
        /openstack/bin/delete-all.sh \
            'gaia-test'

    >   ....
    >   ....


    time \
        /openstack/bin/delete-all.sh \
            'gaia-prod'

    >   ....
    >   ....


# -----------------------------------------------------
# Get the name of our keypair.
#[user@openstacker]

    cloudname=gaia-dev

    keyname=$(
        openstack \
            --os-cloud "${cloudname}" \
            keypair list \
                --format json \
        | jq -r '.[0] | .Name'
        )

    echo "Key name [${keyname:?}]"

    >   ....
    >   ....


# -----------------------------------------------------
# Find the subnet and network ID for the default network.
#[user@terraformer]

    openstack \
        --os-cloud "${cloudname:?}" \
        subnet list

    >   ....
    >   ....


    subnetid=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            subnet list \
                --format json \
        | jq -r '.[] | select(.Name == "cumulus-internal") | .ID'
        )

    networkid=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            subnet show \
                --format json \
                "${subnetid:?}" \
        | jq -r '.network_id'
        )

cat << EOF
Subnet  [${subnetid:?}]
Network [${networkid:?}]
EOF

    >   ....
    >   ....


# -----------------------------------------------------
# Get the ID of the Fedora image.
#[user@openstacker]

    imageid=$(
        openstack \
            --os-cloud "${cloudname}" \
            image list \
                --format json \
        | jq -r '.[] | select(.Name | test("Fedora-30")) | .ID'
        )

    echo "Image ID [${imageid:?}]"

    >   ....
    >   ....


# -----------------------------------------------------
# List all the flavors.
#[user@openstacker]

    openstack \
        --os-cloud "${cloudname:?}" \
        flavor list

    >   ....
    >   ....


# -----------------------------------------------------
# Get the ID of the tiny, small, medium and large flavors.
#[user@openstacker]

    tnflavor=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            flavor list \
                --format json \
        | jq -r '.[] | select(.Name == "general.v1.tiny") | .ID'
        )

    smflavor=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            flavor list \
                --format json \
        | jq -r '.[] | select(.Name == "general.v1.small") | .ID'
        )

    mdflavor=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            flavor list \
                --format json \
        | jq -r '.[] | select(.Name == "general.v1.medium") | .ID'
        )

    lgflavor=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            flavor list \
                --format json \
        | jq -r '.[] | select(.Name == "general.v1.large") | .ID'
        )

    xlflavor=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            flavor list \
                --format json \
        | jq -r '.[] | select(.Name == "general.v1.xlarge") | .ID'
        )


